#!/bin/sh
#
# Init file for Apache Kafka Producer
#
# chkconfig: 35 85 15
# description: Apache Kafka is a distributed publish-subscribe messaging system
# pidfile: /var/run/kafka-producer.pid

NAME=kafka-producer
PID_FILE=/var/run/$NAME.pid
KAFKA_USER=kafka

DAEMON="/opt/kafka/bin/kafka-console-producer.sh"
DAEMON_OPTS="<% @producer_service_config.sort.each do |k,v| -%><% unless v.to_s.strip.empty? -%>--<%= k -%>=<%= v.is_a?(Array) ? v.join(',') : v %> <% end -%><% end -%>"
PRODUCER_INPUT="<%= @input %>"

export KAFKA_JMX_OPTS="<%= @producer_jmx_opts %>"
export KAFKA_LOG4J_OPTS="<%= @producer_log4j_opts %>"

start() {
  if [ -f $PID_FILE ]
    then
      PID=`cat $PID_FILE`
      if [ -z "`ps -ef | awk '{print $2}' | grep "^$PID$"`" ]; then
        echo "\n$PID_FILE exists, process is already running"
        exit 0
      else
        echo "\n$PID_FILE exists but the process is not running. Deleting $PID_FILE and re-trying"
        rm -f $PID_FILE
        start
      fi
    else
        /bin/su $KAFKA_USER -c "$DAEMON $DAEMON_OPTS $PRODUCER_INPUT 1>>/var/log/kafka/producer.log 2>&1 &"
        sleep 2
        PID=`pgrep -f kafka.tools.ConsoleProducer`
        if [ -z "$PID" ]; then
            echo "\n $NAME could not be started"
            exit 1
        else
            echo $PID > $PID_FILE;
            echo "\n$NAME started"
        fi
    fi
}

stop() {
  if [ ! -f $PID_FILE ]
  then
    echo "\n$PID_FILE does not exist, process is not running"
    return 1
  else
    kill `cat $PID_FILE`;
    rm -f $PID_FILE;
    echo "\n$NAME stopped"
    return 0
  fi
}

status() {
  if [ -f $PID_FILE ]
  then
    PID=`cat $PID_FILE`
    if [ -z "`ps -ef | awk '{print $2}' | grep "^$PID$"`" ]
    then
      echo "$NAME stopped but pid file exists"
      exit 1
    else
      echo "$NAME running with pid $PID"
      exit 0
    fi
  else
    echo "$NAME stopped"
    exit 1
  fi
}

case "$1" in
  status)
    status
	;;
  start)
    echo -n "Starting daemon: "$NAME
    start
	;;
  stop)
    echo -n "Stopping daemon: "$NAME
    stop
	;;
  restart)
    echo -n "Restarting daemon: "$NAME
	  stop
    sleep 2
    start
	;;

  *)
	echo "Usage: "$1" {status|start|stop|restart}"
	exit 1
esac

exit 0
